(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{184:function(t,e,i){"use strict";i.r(e);var a=i(0),n=Object(a.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),i("p",[t._v("Each plugin can have multiple commands.")]),t._v(" "),i("p",[t._v("Also see "),i("router-link",{attrs:{to:"/api-reference/command.html#ilocalizedcommand"}},[i("code",[t._v("ILocalizedCommand")])]),t._v(".")],1),t._v(" "),i("p",[t._v("Each command has the following properties:")]),t._v(" "),i("table",[t._m(2),t._v(" "),i("tbody",[t._m(3),t._v(" "),i("tr",[i("td",[t._v("match")]),t._v(" "),i("td",[i("code",[t._v("string | string[] |")]),i("router-link",{attrs:{to:"/api-reference/command.html#idynamicmatch"}},[i("code",[t._v("IDynamicMatch")])])],1),t._v(" "),i("td",[t._v("The word(s) the user can say to execute this command. "),i("br"),i("br"),t._v('Make sure it\'s completely lowercase and without any punctuation. Use "#" in the string as an ordinal place holder. Use "*" as a wildcard placeholder. Lastly, a function '),i("router-link",{attrs:{to:"/api-reference/command.html#idynamicmatch"}},[i("code",[t._v("IDynamicMatch")])]),t._v(" can be used for the most advanced cases.")],1)]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),i("tr",[i("td",[t._v("pageFn")]),t._v(" "),t._m(6),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" An async function to run on the page when the command is called. Special matches ("),i("code",[t._v("*")]),t._v(" and "),i("code",[t._v("#")]),t._v(") will be arguments after the transcript string argument, and will come in the order they are specified in the match property. There will be a number argument if the match string accepts an ordinal (eg. has a "),i("code",[t._v("#")]),t._v(") in it, or a string argument if the match string accepts a wildcard (eg. has a "),i("code",[t._v("*")]),t._v(" in it)."),i("br"),i("br"),t._v("Optionally resolve the promise when this function is finished to help chaining work. Eg. we can use "),i("code",[t._v("return await PluginBase.util.sleep(500);")]),t._v(" if we know a command will take no longer than 500ms to finish, and to only execute the next command in the chain after that 500ms delay."),i("br"),i("br"),t._v(" Also see "),i("router-link",{attrs:{to:"/api-reference/command.html#fn-vs-pagefn"}},[t._v("fn vs. pageFn")]),t._v(".")],1)]),t._v(" "),i("tr",[i("td",[t._v("nice")]),t._v(" "),i("td",[i("router-link",{attrs:{to:"/api-reference/command.html#inicecommand"}},[i("code",[t._v("INiceCommand")])])],1),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" See "),i("router-link",{attrs:{to:"/api-reference/command.html#inicecommand"}},[i("code",[t._v("INiceCommand")])]),t._v(".")],1)]),t._v(" "),i("tr",[i("td",[t._v("fn")]),t._v(" "),t._m(7),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" An async function that runs in the Chrome extension context when the command is called. First arg is the transcript that matched, rest of arguments are what's returned from the match command. "),i("br"),i("br"),t._v("Resolve this promise when the command is done executing in order for chaining to work properly (if desired)."),i("br"),i("br"),t._v(" Also see "),i("router-link",{attrs:{to:"/api-reference/command.html#fn-vs-pagefn"}},[t._v("fn vs. pageFn")]),t._v(".")],1)]),t._v(" "),i("tr",[i("td",[t._v("context")]),t._v(" "),t._m(8),t._v(" "),i("td",[i("em",[t._v("(default: 'Normal')")]),t._v("  What context(s) this command works in. "),i("br"),i("br"),t._v(" See "),i("router-link",{attrs:{to:"/contexts.html"}},[t._v("Contexts")]),t._v(" for details.")],1)]),t._v(" "),i("tr",[i("td",[t._v("enterContext")]),t._v(" "),t._m(9),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" What context to enter if this command matches."),i("br"),i("br"),t._v(" See "),i("router-link",{attrs:{to:"/contexts.html"}},[t._v("Contexts")]),t._v(" for details.")],1)]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13)])]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),i("p",[t._v("A function that decides whether a command matches based on a transcript input for more dynamic command word possibilities.")]),t._v(" "),i("table",[t._m(17),t._v(" "),i("tbody",[i("tr",[i("td",[t._v("fn")]),t._v(" "),i("td",[i("code",[t._v("(transcript: string) =>")]),i("router-link",{attrs:{to:"/api-reference/command.html#dynamicmatchfnresp"}},[i("code",[t._v("DynamicMatchFnResp")])]),i("code",[t._v("| undefined")])],1),t._v(" "),i("td",[t._v("A function that takes in the transcript and returns a "),i("router-link",{attrs:{to:"/api-reference/command.html#dynamicmatchfnresp"}},[i("code",[t._v("DynamicMatchFnResp")])]),t._v("if the command should execute on the given transcript.")],1)]),t._v(" "),t._m(18)])]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[t._v("E.g.")]),t._v(" "),i("p",[t._v("Imagine there's a command word for "),i("span",{staticClass:"voice-cmd"},[t._v("reddit")]),t._v(" and a "),i("router-link",{attrs:{to:"/api-reference/command.html#idynamicmatch"}},[t._v("dynamic match command")]),t._v(" for "),i("span",{staticClass:"voice-cmd"},[t._v("reddit message")]),t._v(" that are both valid on a given page. If the user says "),i("span",{staticClass:"voice-cmd"},[t._v("reddit message")]),t._v(" the transcripts will come down the wire something like this:")],1),t._v(" "),t._m(23),t._v(" "),i("p",[t._v('Can you see the problem? Our "reddit" command will execute even though we only want "reddit" message to.')])]),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),i("p",[t._v("See also "),i("router-link",{attrs:{to:"/api-reference/command.html#icommand"}},[i("code",[t._v("ICommand")])]),t._v(" and "),i("router-link",{attrs:{to:"/api-reference/pluginbase.html#iplugintranslation"}},[i("code",[t._v("IPluginTranslation")])]),t._v(".")],1),t._v(" "),i("table",[t._m(26),t._v(" "),i("tbody",[t._m(27),t._v(" "),t._m(28),t._v(" "),i("tr",[i("td",[t._v("match")]),t._v(" "),i("td",[i("code",[t._v("string | string[] |")]),i("router-link",{attrs:{to:"/api-reference/command.html#idynamicmatch"}},[i("code",[t._v("IDynamicMatch")])])],1),t._v(" "),i("td",[t._v("The way localized version of command match can be completely different from the base English version.")])]),t._v(" "),t._m(29),t._v(" "),i("tr",[i("td",[t._v("nice")]),t._v(" "),i("td",[i("router-link",{attrs:{to:"/api-reference/command.html#inicecommand"}},[i("code",[t._v("INiceCommand")])])],1),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" See "),i("router-link",{attrs:{to:"/api-reference/command.html#inicecommand"}},[i("code",[t._v("INiceCommand")])]),t._v(".")],1)])])]),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),i("p",[t._v('Returns the complete "live transcript" that should be shown. '),i("code",[t._v("rawInput")]),t._v(' is the transcript (eg. "go to are meal time videos") '),i("code",[t._v("matchOutput")]),t._v(" is an array returned from the match command if "),i("router-link",{attrs:{to:"/api-reference/command.html#idynamicmatch"}},[i("code",[t._v("IDynamicMatch")])]),t._v("is used.")],1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands","aria-hidden":"true"}},[this._v("#")]),this._v(" Commands")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"icommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#icommand","aria-hidden":"true"}},[this._v("#")]),this._v(" ICommand")])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("Member")]),this._v(" "),e("th",[this._v("Type")]),this._v(" "),e("th",[this._v("Description")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("name")]),this._v(" "),e("td",[e("code",[this._v("string")])]),this._v(" "),e("td",[this._v("Friendly-name of the command (not necessarily the words used to call it). Should be title-cased.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("description")]),this._v(" "),e("td",[e("code",[this._v("string")])]),this._v(" "),e("td",[e("em",[this._v("(optional)")]),this._v(" Detailed description visible in the options page.")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("tr",[i("td",[t._v("global")]),t._v(" "),i("td",[i("code",[t._v("boolean")])]),t._v(" "),i("td",[i("em",[t._v("(default: false)")]),t._v(" let the command match on any page (not restricted by the "),i("code",[t._v("match")]),t._v(" of the Plugin)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("td",[e("code",[this._v("(transcript: string, ...matchOutput: any) => Promise<void>")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("td",[e("code",[this._v("(transcript: string, ...matchOutput: any) => Promise<void>")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("td",[e("code",[this._v("string | string[]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("td",[e("code",[this._v("string")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("minConfidence")]),this._v(" "),e("td",[e("code",[this._v("number")])]),this._v(" "),e("td",[e("em",[this._v("(optional)")]),this._v(" A decimal between 0.0 and 1.0 that specifies the minimum confidence needed for this command to be considered a match. "),e("br"),e("br"),this._v(' Useful for lowering sensitivity of specific commands if they are relatively "dangerous" to execute, for example.')])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("tr",[i("td",[t._v("delay")]),t._v(" "),i("td",[i("code",[t._v("number | number[]")])]),t._v(" "),i("td",[i("em",[t._v("(optional)")]),t._v(" How long to wait for additional input for before executing this command. Overrides delay that is built-in for commands with match strings that end in ordinals or wildcards. "),i("br"),i("br"),t._v(" Useful for when you want to allow time for more words to come through. "),i("br"),i("br"),t._v(" Use an array with indices that correspond to the different match strings if you should have different delays based on the match string."),i("br"),i("br"),t._v("Use 0 to override dynamically calculated delay and to execute command immediately on match.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("activeDocument")]),this._v(" "),e("td",[e("code",[this._v("boolean")])]),this._v(" "),e("td",[e("em",[this._v("(default: false)")]),this._v(" whether to execute this command in the focused frame or iFrame.")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("tr",[i("td",[t._v("test")]),t._v(" "),i("td",[i("code",[t._v("(t: ExecutionContext<ICommandTestContext>, say: (s?: string) => Promise<void>, client: WebdriverIOAsync.BrowserObject) => void")])]),t._v(" "),i("td",[i("em",[t._v("(optional but recommended)")]),t._v(" "),i("a",{attrs:{href:"https://github.com/avajs/ava"}},[t._v("AVA")]),t._v(" integration test for this command.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"fn-vs-pagefn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fn-vs-pagefn","aria-hidden":"true"}},[this._v("#")]),this._v(" "),e("code",[this._v("fn")]),this._v(" vs. "),e("code",[this._v("pageFn")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),i("p",[i("code",[t._v("pageFn")]),t._v(" runs in the context of the page so it has access to the DOM, but doesn't have access to Chrome extension APIs like "),i("code",[t._v("chrome.tabs")]),t._v(". "),i("code",[t._v("fn")]),t._v(" on the other hand runs in the (sandboxed) context of the Chrome extension; it doesn't have access to the page or it's DOM but it does have access to the Chrome extension APIs.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"idynamicmatch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#idynamicmatch","aria-hidden":"true"}},[this._v("#")]),this._v(" IDynamicMatch")])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("Member")]),this._v(" "),e("th",[this._v("Type")]),this._v(" "),e("th",[this._v("Description")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("description")]),this._v(" "),e("td",[e("code",[this._v("string")])]),this._v(" "),e("td",[this._v("Used to decribe to the user what command words match. Seen in plugins list in options.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"dynamicmatchfnresp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamicmatchfnresp","aria-hidden":"true"}},[this._v("#")]),this._v(" DynamicMatchFnResp")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Type:")]),this._v(" "),e("code",[this._v("[number, number, any[]?]|undefined|false")]),this._v(" or a "),e("code",[this._v("Promise")]),this._v(" with the same result type.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("The start match index, the end match index and an array of "),e("code",[this._v("any")]),this._v(" type args to pass over to "),e("code",[this._v("pageFn")]),this._v(" as the "),e("code",[this._v("...matchOutput[]")]),this._v(" arguments. Don't include the transcript argument, as it's automatically included (and trimmed depending on the start and end match indices).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Return "),e("code",[this._v("false")]),this._v(" or "),e("code",[this._v("Promise<false>")]),this._v(" if there is a partial match. If there is a partial match we will delay other commands that might already want to execute.")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("red")]),t._v(" "),i("li",[t._v("reddit")]),t._v(" "),i("li",[t._v("read it")]),t._v(" "),i("li",[t._v("read it mess")]),t._v(" "),i("li",[t._v("reddit mess")]),t._v(" "),i("li",[t._v("reddit message")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v('If you don\'t want the first "reddit" command to match, return '),e("code",[this._v("false")]),this._v(" when there is a partial match for the dynamic "),e("span",{staticClass:"voice-cmd"},[this._v("reddit")]),this._v(' command for transcripts that start with "reddit".')])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"ilocalizedcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ilocalizedcommand","aria-hidden":"true"}},[this._v("#")]),this._v(" ILocalizedCommand")])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("Member")]),this._v(" "),e("th",[this._v("Type")]),this._v(" "),e("th",[this._v("Description")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("name")]),this._v(" "),e("td",[e("code",[this._v("string")])]),this._v(" "),e("td",[this._v("The original name of the command to match this localized version with.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("description")]),this._v(" "),e("td",[e("code",[this._v("string")])]),this._v(" "),e("td",[e("em",[this._v("(optional)")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("delay")]),this._v(" "),e("td",[e("code",[this._v("number | number[]")])]),this._v(" "),e("td",[e("em",[this._v("(optional)")]),this._v(" Delays for a localized version of a command can be completely different from the base English version.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"inicecommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inicecommand","aria-hidden":"true"}},[this._v("#")]),this._v(" INiceCommand")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Type:")]),this._v(" "),e("code",[this._v("string | ((transcript: string, ...matchOutput: any[]) => string)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Sometimes we want to adjust the transcript as it is shown on the live transcript. For example if the user says "),e("span",{staticClass:"voice-cmd"},[this._v("go to are meal time videos")]),this._v(" we would want to show that as "),e("span",{staticClass:"voice-cmd"},[this._v("go to r/mealtimevideos")]),this._v(".")])}],!1,null,null,null);n.options.__file="command.md";e.default=n.exports}}]);