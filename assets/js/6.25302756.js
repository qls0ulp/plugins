(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{185:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"custom-stt-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-stt-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Custom STT API")]),t._v(" "),a("p",[a("strong",[t._v("v1.0.0")])]),t._v(" "),a("p",[a("em",[t._v("Last Updated May 21, 2020")])]),t._v(" "),a("p",[t._v("This API is used for overriding the built-in STT in LipSurf for an external one. It is only available in LipSurf Enterprise builds.")]),t._v(" "),a("h2",{attrs:{id:"quick-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-start","aria-hidden":"true"}},[t._v("#")]),t._v(" Quick Start")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntop"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tforLipSurf"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t\tmethod"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'handleTranscript'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t\targs"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0.99")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'*'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("h3",{attrs:{id:"handletranscript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handletranscript","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("handleTranscript")])]),t._v(" "),a("p",[t._v("Sends STT generated transcript to LipSurf for processing and command execution.")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/**\n  * \n  * @param transcript\n  * @param confidence between 0 and 1, 1 being the highest level of confidence\n  * @param isFinal set to true if there will not be any subsequent adjustments \n  *     to this transcript\n  * @param resultIndex so we can identify if we're updating a previous \n  *     transcript (eg. with a higher confidence, or if we're adding newly said \n  *     things)\n  * @param recgTime when the transcript was generated in milliseconds since \n  *     UNIX epoch\n  */")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("handleTranscript")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\ttranscript"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("string")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tconfidence"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("number")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tisFinal"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t\tresultIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("number")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\trecgTime"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token builtin"}},[t._v("number")]),t._v("\n\t"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("start")])]),t._v(" "),a("p",[t._v("Start listening.")]),t._v(" "),a("h3",{attrs:{id:"pause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pause","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("pause")])]),t._v(" "),a("p",[t._v("Pauses LipSurf from listening, but does not turn it completely off (useful for keeping LipSurf generated UI on the screen).")]),t._v(" "),a("h3",{attrs:{id:"shutdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shutdown","aria-hidden":"true"}},[t._v("#")]),t._v(" "),a("code",[t._v("shutdown")])]),t._v(" "),a("p",[t._v("Stops listening and all LipSurf generated UI removed.")])])}],!1,null,null,null);e.options.__file="customstt.md";s.default=e.exports}}]);